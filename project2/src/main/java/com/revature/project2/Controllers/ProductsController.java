package com.revature.project2.Controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import com.revature.project2.Repositories.ProductsRepository;

import java.util.Optional;

import javax.validation.constraints.NotNull;

import com.revature.project2.Entities.Products;


@Controller    // This means that this class is a Controller
@RequestMapping(path="/project2") // This means URL's start with /demo (after Application path)
public class ProductsController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private ProductsRepository productRepository;

	@PostMapping(path="/addproduct") // Map ONLY POST Requests
	public @ResponseBody void addNewProduct (@RequestBody Products product) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		//new_dart.setId(id);

		productRepository.save(product);
	}

	@GetMapping(path="/getallproduct")
	public @ResponseBody Iterable<Products> getAllProducts() {
		// This returns a JSON or XML with the users
		return productRepository.findAll();
	}

	@GetMapping(path="/getproductbyid/{id}")
	public @ResponseBody Optional<Products> findByIds(@PathVariable @NotNull int id) {
		return productRepository.findById(id);
	}
}